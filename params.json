{"name":"Irminsule","tagline":"Irminsule is a distributed database that follows the same design principles as Git","body":"## Irminsule\r\n\r\nIrminsule is a distributed database with built-in snapshot, branch and\r\nrevert mechanisms. It is designed to use a large variety of backends,\r\nalthough it is optimized for append-only store.\r\n\r\nIrminsule is written in pure OCaml, and can thus be compiled to Javascript\r\n-- to run in the browsers, and into a Mirage microkernels -- to run directly\r\non top of Xen.\r\n\r\n### Installing\r\n\r\n```\r\nopam install irminsule\r\n```\r\n\r\nThis is a brief tutorial to start playing with Irminsule and its\r\ncommand-line tool.\r\n\r\n### Using the In-Memory Backend\r\n\r\nLet's start by creating a new Irminsule instance, which stores its data\r\nin memory.  To do this, we can use the `irmin` command-line tool,\r\nwhich is an easy-way to access the Irminsule libraries and APIs.\r\n\r\n```shell\r\n$ mkdir /tmp/irmin-mem && cd /tmp/irmin-mem\r\n$ irmin init -d -m -v # Start a server (-d) in-memory (-m) and display some events (-v)\r\n2014-01-21 17:24:26.525        INFO : source: in-memory\r\n2014-01-21 17:24:26.526        INFO : daemon: http://127.0.0.1:8080\r\nServer started on port 8080.\r\n```\r\n\r\nYou can now open a new terminal, tell irminsule to use by defaut a remote store located\r\non `http://127.0.0.1:8080` and start writing few things in the database.\r\n\r\n```shell\r\n$ export IRMIN=r:http://127.0.0.1:8080\r\n$ irmin write a/b foo\r\n$ irmin write a/c bar\r\n```\r\n\r\nYou can then inspect the database contents:\r\n\r\n```shell\r\n$ irmin tree\r\n/a/b...............................................................................\"foo\"\r\n/a/c...............................................................................\"bar\"\r\n$ irmin read a/b\r\nfoo\r\n```\r\n\r\nThis state looks good, so we want to keep track of it if later something bad happens\r\nto the database.\r\n\r\n```shell\r\n$ STATE=`irmin snapshot`\r\n$ irmin write a/b notfoo\r\n# [...]\r\n$ irmin revert $STATE\r\n$ irmin tree\r\n/a/b...............................................................................\"foo\"\r\n/a/c...............................................................................\"bar\"\r\n```\r\n\r\nUnder the hood there are three different kind of objects that are\r\nstored in the database.  First the raw objects (or blobs) are the one\r\nthat are directly provided by the user (or the application). That's\r\n`foo` and `bar` here. There are tree objects, which are similar to filesystem\r\ninodes, which are used by Irminsule to keep track of\r\ndirectories. Finally, there are commit objects, which are used to keep\r\ntrack of the state history (and are useful to snapshot and rollback).\r\n\r\nYou can see the relation between this objects by dumping the database state in a `.dot` file.\r\n\r\n```shell\r\n$ irmin dump thestate\r\n$ cat thestate.dot\r\n# [..] A graphivz graph\r\n$ open thestate.png`\r\n```\r\n\r\nTODO: insert a diagram and explain how to read it\r\n\r\nYou can also access the daemon state by opening your browser to `http://127.0.0.1:8080`\r\ndirectly which is a classical JSON CRUD interface.\r\nIt will list the possible operations. For instance, you can read the store\r\ncontents directy:\r\n\r\n```shell\r\n$ curl http://127.0.0.1:8080/read/a/b\r\n{\"result\":\"foo\"}\r\n```\r\n\r\nNow you can switch back to the first terminal (where you started the\r\nIrminsule daemon). You will see a lot of activity has been going on in\r\nthere as it was busy dealing with the requests you just made. If\r\nyou kill the daemon and restart it again, you will notice that all the\r\nstate is lost. This is expected, as you run the daemon using `-m`\r\n(i.e. backing the database store in memory). If you want to persist\r\nit using a custom binary format (which is optimized for reading and\r\nwriting, not much for space usage) you can simply remove `-m` when\r\nyou start the daemon: every\r\nwrite operation will be directly flushed to disk and you will be able\r\nto restart the server seamlessly.\r\n\r\n### The Git Backend\r\n\r\nNow the really cool think about Irminsule is that it speaks Git\r\nfluently. This means that you can replace `-m` by `-g` and do\r\nexactly the same thing as in the previous section. But, then, you will\r\nbe able to use the usual `git` command-line tool to inspect, modify and\r\nadd new elements to the store.\r\n\r\nFor instance, let's start a new Irminsule instance.\r\n\r\n```shell\r\n$ mkdir /tmp/irmin-git && cd /tmp/irmin-git\r\n$ git init\r\nInitialized empty Git repository in /tmp/irmin-git/.git/\r\n$ irmin init -g -d -v\r\n```\r\n\r\nYou can the add some data in a new terminal:\r\n\r\n```shell\r\n$ export IRMIN=r:http://127.0.0.1:8080\r\n$ irmin write a/b foo\r\n$ irmin write a/c bar\r\n```\r\n\r\nIt's now really easy to inspect the history using the usual Git worklow:\r\n\r\n```shell\r\n$ cd /tmp/irmin-git\r\n$ git log\r\ncommit 87866c90c99fbbd0b029a95ef4354a6cb47656c1\r\nAuthor: Irminsule (piana.mac.cl.cam.ac.uk[37101])\r\n<irminsule@openmirage.org>\r\nDate:   Tue Jan 21 17:59:57 2014 +0000\r\n\r\n    Autogenerated by Irminsule\r\n\r\ncommit 5954683338c43d73c5589ce1c2dc09c2a4fac1ec\r\nAuthor: Irminsule (piana.mac.cl.cam.ac.uk[37100])\r\n<irminsule@openmirage.org>\r\nDate:   Tue Jan 21 17:59:55 2014 +0000\r\n\r\n    Autogenerated by Irminsule\r\n\r\n$ git show 5954\r\ncommit 5954683338c43d73c5589ce1c2dc09c2a4fac1ec\r\nAuthor: Irminsule (piana.mac.cl.cam.ac.uk[37100])\r\n<irminsule@openmirage.org>\r\nDate:   Tue Jan 21 17:59:55 2014 +0000\r\n\r\n    Autogenerated by Irminsule\r\n\r\ndiff --git a/a/b b/a/b\r\nnew file mode 100644\r\nindex 0000000..1910281\r\n--- /dev/null\r\n+++ b/a/b\r\n@@ -0,0 +1 @@\r\n+foo\r\n\\ No newline at end of file\r\n```\r\n\r\nThat translation is bidirectional. That means that any change you make\r\nin the directory will be reflected in the Irminsule world.\r\n\r\n```shell\r\n$ git reset HEAD --hard # Extract the files from the bare Git repo\r\n$ tree\r\n.\r\nâââ [thomas    136]  a\r\n    âââ [thomas      3]  b\r\n    âââ [thomas      3]  c\r\n\r\n1 directory, 2 files\r\n$ echo \"Hello world\" >> a/b\r\n$ git commit -a -m \"Test\"\r\n[master ed406fe] Test\r\n 1 file changed, 1 insertion(+), 1 deletion(-)\r\n$ irmin tree\r\n/a/b...............................................................................\"fooHello world\\n\"\r\n/a/c............................................................................................\"bar\"\r\n$ git rev-parse HEAD\r\ned406fe7854317f511b746439f6f25adb89d3dd8\r\n$ irmin snapshot\r\ned406fe7854317f511b746439f6f25adb89d3dd8\r\n```\r\n\r\nThis enables an application to pull/push the state of its database.\r\n\r\nTODO: more next","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}